#include <stdarg.h>
#include <stdio.h>
/**
 * _printf - Main function for my printf program
 *
 * @format: Format specifiers
 * Return: count
 */
int _printf(const char *format, ...)
{
	int count = 0, i;
	int d, j, digit;
	va_list args;

	va_start(args, format);

	for (i = 0; format[i]; i++)
	{
		if (format[i] != '%')
		{
			putchar(format[i]);
			count++;
		}
		else
		{
			i++;
			switch (format[i])
			{
				case 'c':
					{
						char c = (char) va_arg(args, int);

						putchar(c);
						count++;
						break;
					}
				case 's':
					{
						char *s = va_arg(args, char *);

						for (j = 0; s[j] != '\0'; j++)
						{
							putchar(s[j]);
							count++;
						}
						break;
					}
				case 'i':
				case 'd':
					{
						int d = va_arg(args, int);

						if (d < 0)
						{
							putchar('-');
							d = -d;
							count++;
						}
						if (d == 0)
						{
							putchar('0');
							count++;
						}
						else
						{
							char buffer[20];
							int index = 0, j;
							while (d > 0)
							{
								buffer[index++] = d % 10 + '0';
								d /= 10;
							}
							for (j = index - 1; j >= 0; j--)
							{
								putchar(buffer[j]);
								count++;
							}
						}
						break;
					}
				case 'f':
					{
						double f = va_arg(args, double);

						if (f < 0)
						{
							putchar('-');
							f = -f;
							count++;
						}
						d = (int) f;
						f -= d;
						if (d == 0)
						{
							putchar('0');
							count++;
						}
						else
						{
							char buffer[20];
							int index = 0, j;
							while (d > 0)
							{
								buffer[index++] = d % 10 + '0';
								d /= 10;
							}
							for (j = index - 1; j >= 0; j--)
							{
								putchar(buffer[j]);
								count++;
							}
						}
						putchar('.');
						count++;
						for (j = 0; j < 6; j++)
						{
							f *= 10;
							digit = (int) f;
							putchar(digit + '0');
							f -= digit;
							count++;
						}
						break;
					}
				case 'o':
					{
						unsigned int u = va_arg(args, unsigned int);

						printf("%o", u);
						break;
					}
				case 'u':
					{
						unsigned int u = va_arg(args, unsigned int);

						printf("%u", u);
						break;
					}
				case 'p':
					{
						void *p = va_arg(args, void *);

						printf("%p", p);
						break;
					}
				case 'x':
				case 'X':
					{
						unsigned int u = va_arg(args, unsigned int);

						printf("%X", u);
						break;
					}
				case 'r':
				case '%':
					{
						putchar('%');
						count++;
						break;
					}
				default:
					{
						printf("%%%c", format[i]);
						break;
					}
			}
		}
	}

	va_end(args);
	return (count);
}
