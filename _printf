#include "main.h"
/**
 *
 *
void cleanup(va_list args, char *output)
{
	if (va_end != NULL)
	{
		va_end(args);
		fwrite(output, 1, strlen(output), stdout);
	}
	free(output);
}
 * _printf - Outputs a formatted string.
 * @format: Character string to print - may contain directives.
 *
 * Return: The number of characters printed.
 */
int _printf(const char *format, ...)
{
	const char *p;
	int count;

	va_list args;

	va_start(args, format);

	count = 0;

	for (p = format; *p; ++p)
	{
		if (*p != '%')
		{
			putchar(*p);
			count++;
			continue;
		}
		++p;
		if (*p == '\0')
		{
			break;
		}
		if (*p == '%')
		{
			putchar('%');
			count++;
			continue;
		}

		switch (*p)
		{

			case 'c':
				{
					char c = (char) va_arg(args, int);

					putchar(c);
					count++;
					break;
				}
			case 's':
				{
					char *s = va_arg(args, char *);

					putchar(*s);
					break;
				}
			default:
				{
					printf("%%%c", *p);
					break;
				}
		}
	}
	va_end(args);
	return (count);
}
